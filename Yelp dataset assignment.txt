Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table =  10000
vii. hours table = 10000
viii. photo table =  10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000




2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = id(primary key) : 10000 records
ii. Hours = business_id(foreign key) : 1562 records
iii. Category = business_id(foreign key) : 2643 records
iv. Attribute = business_id(foreign key) : 1115 records
v. Review = id(primary key) : 10000 , business_id(foreign key): 8090, user_id(foreign key) : 9581
vi. Checkin = business_id(foreign key) : 493 records
vii. Photo = business_id(foreign key) : 6493, id(primary key): 10000
viii. Tip = foreign keys, user_id : 537, business_id : 3979
ix. User = id(primary key): 10000
x. Friend = user_id(foreign key) : 11
xi. Elite_years = user_id(foreign key) : 2780
	
Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	
	SQL code used to arrive at answer:  Select *
                                          from user
                                          Where id IS NULL OR
                                                name IS NULL OR
                                                review_count IS NULL OR
                                                yelping_since IS NULL OR
                                                useful IS NULL OR
                                                funny IS NULL OR
                                                cool IS NULL OR
                                                fans IS NULL OR
                                                average_stars IS NULL OR
                                                compliment_hot IS NULL OR
                                                compliment_more IS NULL OR
                                                compliment_profile IS NULL OR
                                                compliment_cute IS NULL OR
                                                compliment_list IS NULL OR
                                                compliment_note IS NULL OR
                                                compliment_plain IS NULL OR
                                                compliment_cool IS NULL OR
                                                compliment_funny IS NULL OR
                                                compliment_writer IS NULL OR
                                                compliment_photos IS NULL 







4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:		max:		avg:
		 1           5          3.7082
	
	ii. Table: Business, Column: Stars
	
		min:		max:		avg:
		1.0         5.0         3.6549
	
	iii. Table: Tip, Column: Likes
	
		min:		max:		avg:
		 0           2          0.0144
	
	iv. Table: Checkin, Column: Count
	
		min:		max:		avg:
		 1           53           1.9414
	
	v. Table: User, Column: Review_count
	
		min:		max:		avg:
		 0          2000        24.2995



5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:  Select city, sum(review_count) as Reviews
                                          from business
                                          group by city
                                          order by Reviews desc
	
	
	Copy and Paste the Result Below:     +-----------------+---------+
                                           | city            | Reviews |
                                           +-----------------+---------+
                                           | Las Vegas       |   82854 |
                                           | Phoenix         |   34503 |
                                           | Toronto         |   24113 |
                                           | Scottsdale      |   20614 |
                                           | Charlotte       |   12523 |
                                           | Henderson       |   10871 |
                                           | Tempe           |   10504 |
                                           | Pittsburgh      |    9798 |
                                           | Montréal        |    9448 |
                                           | Chandler        |    8112 |
                                           | Mesa            |    6875 |
                                           | Gilbert         |    6380 |
                                           | Cleveland       |    5593 |
                                           | Madison         |    5265 |
                                           | Glendale        |    4406 |
                                           | Mississauga     |    3814 |
                                           | Edinburgh       |    2792 |
                                           | Peoria          |    2624 |
                                           | North Las Vegas |    2438 |
                                           | Markham         |    2352 |
                                           | Champaign       |    2029 |
                                           | Stuttgart       |    1849 |
                                           | Surprise        |    1520 |
                                           | Lakewood        |    1465 |
                                           | Goodyear        |    1155 |
                                           +-----------------+---------+



6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:   select stars, count(stars) as Ratings_count
                                     from business
                                     where city = 'Avon'
                                     group by stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):   +-------+---------------+
                                                                                  | stars | Ratings_count |
                                                                                  +-------+---------------+
                                                                                  |   1.5 |             1 |
                                                                                  |   2.5 |             2 |
                                                                                  |   3.5 |             3 |
                                                                                  |   4.0 |             2 |
                                                                                  |   4.5 |             1 |
                                                                                  |   5.0 |             1 |
                                                                                  +-------+---------------+


ii. Beachwood

SQL code used to arrive at answer:    select stars, count(stars) as Ratings_count
                                      from business
                                      where city = 'Beachwood'
                                      group by stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):   +-------+---------------+
                                                                                  | stars | Ratings_count |
                                                                                  +-------+---------------+
                                                                                  |   2.0 |             1 |
                                                                                  |   2.5 |             1 |
                                                                                  |   3.0 |             2 |
                                                                                  |   3.5 |             2 |
                                                                                  |   4.0 |             1 |
                                                                                  |   4.5 |             2 |
                                                                                  |   5.0 |             5 |
                                                                                  +-------+---------------+

		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:  Select name, review_count 
                                          from user
                                          order by review_count desc
                                          limit 3
	
		
	Copy and Paste the Result Below:    +--------+--------------+
                                          | name   | review_count |
                                          +--------+--------------+
                                          | Gerald |         2000 |
                                          | Sara   |         1629 |
                                          | Yuri   |         1339 |
                                          +--------+--------------+



8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
           No, Posing more reviews does not correlate with more fans. Gerald has the highest review_count but has less fans compared to Mimi.
           so, there is no corelation between review_count and fans.
               
        Select name, review_count, fans
        from user
        order by review_count desc
        +-----------+--------------+------+
        | name      | review_count | fans |
        +-----------+--------------+------+
        | Gerald    |         2000 |  253 |
        | Sara      |         1629 |   50 |
        | Yuri      |         1339 |   76 |
        | .Hon      |         1246 |  101 |
        | William   |         1215 |  126 |
        | Harald    |         1153 |  311 |
        | eric      |         1116 |   16 |
        | Roanna    |         1039 |  104 |
        | Mimi      |          968 |  497 |
        | Christine |          930 |  173 |
        | Ed        |          904 |   38 |
        | Nicole    |          864 |   43 |
        | Fran      |          862 |  124 |
        | Mark      |          861 |  115 |
        | Christina |          842 |   85 |
        | Dominic   |          836 |   37 |
        | Lissa     |          834 |  120 |
        | Lisa      |          813 |  159 |
        | Alison    |          775 |   61 |
        | Sui       |          754 |   78 |
        | Tim       |          702 |   35 |
        | L         |          696 |   10 |
        | Angela    |          694 |  101 |
        | Crissy    |          676 |   25 |
        | Lyn       |          675 |   45 |
        +-----------+--------------+------+
	

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:  There are more reviews with the word "love" compare to word with "hate". 

	
	SQL code used to arrive at answer:   Select count(*)                           Select count(*)
                                           from review                               from review
                                           where text like '%love%'                  where text like '%hate%'
                                           
                                           +----------+                              +----------+
                                           | count(*) |                              | count(*) |
                                           +----------+                              +----------+
                                           |     1780 |                              |      232 |
                                           +----------+                              +----------+
                                                                         
                                                                         
                              

	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:  Select name, fans
                                          from user
                                          order by fans desc
	                                    limit 10
	
	Copy and Paste the Result Below:   +-----------+------+
                                         | name      | fans |
                                         +-----------+------+
                                         | Amy       |  503 |
                                         | Mimi      |  497 |
                                         | Harald    |  311 |
                                         | Gerald    |  253 |
                                         | Christine |  173 |
                                         | Lisa      |  159 |
                                         | Cat       |  133 |
                                         | William   |  126 |
                                         | Fran      |  124 |
                                         | Lissa     |  120 |
                                         +-----------+------+




Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?
     Yes, the two groups have a different distribution of hours.

ii. Do the two groups you chose to analyze have a different number of reviews?
         Yes, they have a different number of counts for reviews.
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
     No, as they have different postal_code of the location.

SQL code used for analysis:    select bus.name,bus.postal_code, bus.city, bus.stars, bus.review_count
                               , cat.category, hrs.hours
                               from ((business bus INNER JOIN category cat 
                               ON bus.id = cat.business_id)
                               INNER JOIN hours hrs ON cat.business_id = hrs.business_id)
                               where bus.city = "Las Vegas" and cat.category = "Restaurants"
                               group by bus.stars
                                     
                               +---------------------+-------------+-----------+-------+--------------+-------------+----------------------+
                               | name                | postal_code | city      | stars | review_count | category    | hours                |
                               +---------------------+-------------+-----------+-------+--------------+-------------+----------------------+
                               | Wingstop            | 89103       | Las Vegas |   3.0 |          123 | Restaurants | Saturday|11:00-0:00  |
                               | Big Wong Restaurant | 89146       | Las Vegas |   4.0 |          768 | Restaurants | Saturday|10:00-23:00 |
                               +---------------------+-------------+-----------+-------+--------------+-------------+----------------------+

		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1: The ones that are still open has more review_count than the ones that are closed.
         
         
ii. Difference 2: The ones that are still open has more average star ratings than the ones are closed.
         
         
         
SQL code used for analysis:     Select count(distinct(id)), avg(review_count), sum(review_count), avg(stars)
                                , is_open
                                from business
                                Group by is_open
                        
                                +---------------------+-------------------+-------------------+---------------+---------+
                                | count(distinct(id)) | avg(review_count) | sum(review_count) |    avg(stars) | is_open |
                                +---------------------+-------------------+-------------------+---------------+---------+
                                |                1520 |     23.1980263158 |             35261 | 3.52039473684 |       0 |
                                |                8480 |     31.7570754717 |            269300 | 3.67900943396 |       1 |
                                +---------------------+-------------------+-------------------+---------------+---------+



3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:  I chose to do analysis of good restaurants to eat in Las Vegas city 
         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
    For my analysis, I need business data from business columns like name, address, city, stars, postal_code, review_count and category data from category columns. 
    To get result for good restaurants to eat in Las Vegas City at different postal code I analyzed stars ratings and number of reviews of the Restaurants.
                  
iii. Output of your finished dataset:    +---------------------+---------------------------------+-----------+-------------+-------+--------------+-------------+
                                         | name                | address                         | city      | postal_code | stars | review_count | category    |
                                         +---------------------+---------------------------------+-----------+-------------+-------+--------------+-------------+
                                         | Hibachi-San         | 3480 S Maryland Pkwy            | Las Vegas | 89169       |   4.5 |            3 | Restaurants |
                                         | Jacques Cafe        | 1910 Village Center Cir, Unit 1 | Las Vegas | 89134       |   4.0 |          168 | Restaurants |
                                         | Big Wong Restaurant | 5040 Spring Mountain Rd         | Las Vegas | 89146       |   4.0 |          768 | Restaurants |
                                         | Wingstop            | 5045 W Tropicana Ave            | Las Vegas | 89103       |   3.0 |          123 | Restaurants |
                                         +---------------------+---------------------------------+-----------+-------------+-------+--------------+-------------+
         
         
iv. Provide the SQL code you used to create your final dataset:   Select bus.name, bus.address , bus.city, bus.postal_code, bus.stars
                                                                  , bus.review_count, cat.category
                                                                  from business bus
                                                                  INNER JOIN category cat
                                                                  ON bus.id = cat.business_id
                                                                  where bus.city = "Las Vegas" and cat.category = "Restaurants" 
                                                                  Order by bus.stars desc


	

